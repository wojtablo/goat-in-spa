@import "../settings";
@import "../foundation/components/grid";
@import "compass/css3";


.wf-loading{
  #globalContainer:before {
    background: #476eee;
    content:"Loading...";
    position:absolute;
    right:0px;
    top:0px;
    color:#fff;
    font:bold 11px "Arial";
    padding:4px 8px;
    opacity:0.95;
    z-index: 999;;
  }
}
.wf-active {
  #globalContainer:before {
    background: #74ee12;
    content:"Font's loaded!";
    position:absolute;
    right:0px;
    top:0px;
    color:#fff;
    font:bold 11px "Arial";
    padding:4px 8px;
    opacity:0.95;
    z-index: 999;;
  }
}
.wf-inactive{
  #globalContainer:before {
    background: red;
    content:"Font's wasn't not loded!";
    position:absolute;
    right:0px;
    top:0px;
    color:#fff;
    font:bold 11px "Arial";
    padding:4px 8px;
    opacity:0.95;
    z-index: 999;
  }
}

%maxHeight {
  min-height:                100% !important;
  height:                    100%; // For Firefox
  min-width:                 100%;
}



$graphicMode          :   true;
$allowMargins         :   true;
$allowMarginsMobile   :   $allowMargins;
$allowMarginsTablet   :   $allowMarginsMobile;
$allowMarginsPc       :   $allowMarginsMobile;

// Live defaults
$dir_GFX              :   "http://beta.kozminski.edu.pl/fundacja/gfx/";
//$dir_FONTS            :   "http://beta.kozminski.edu.pl/fundacja/fonts/";

// Local defaults
$dir_FONTS            :   "/fonts/";

/*------------------------------------*\
    FONTS
\*------------------------------------*/

//@include font-face("MyriadPro-LightCond",     font-files("MyriadPro-LightCond.otf"));
//@include font-face("MyriadPro-SemiboldCond",  font-files("MyriadPro-SemiboldCond.otf"));
//@include font-face("OpenSans-Bold",           font-files("OpenSans-Bold.ttf"));
//@include font-face("OpenSans-Light",          font-files("OpenSans-Light.ttf"));
//@include font-face("OpenSans-Regular",        font-files("OpenSans-Regular.ttf"));

@font-face {
  font-family: 'MyriadPro-LightCond';
  src: url("#{$dir_FONTS}MyriadPro-LightCond.otf");
}
@font-face {
  font-family: 'MyriadPro-SemiboldCond';
  src:  url("#{$dir_FONTS}MyriadPro-SemiboldCond.otf");
}
@font-face {
  font-family: 'OpenSans-Bold';
  src:  url("#{$dir_FONTS}OpenSans-Bold.ttf");
}
@font-face {
  font-family: 'OpenSans-Light';
  src:  url("#{$dir_FONTS}OpenSans-Light.ttf");
}
@font-face {
  font-family: 'OpenSans-Regular';
  src:  url("#{$dir_FONTS}OpenSans-Regular.ttf");
}

p {
  font-family: 'OpenSans-Light';
}


%font__size--xlarge {
  font-family:"MyriadPro-LightCond";
  font-size:2.35em;
  color:$blue4-color;
  span {
    display: block;
    font-family:"MyriadPro-SemiboldCond";
    font-size: 2.2em;
    line-height: 0.9;
  }

  @media #{$medium-up} { font-size:2.2em; }
  @media #{$large-up}  { font-size:5.2em; }
}

%font__size--large {
  font-family:"OpenSans-Bold";
  font-size:2em;
//  line-height: 2em;
  line-height: 1.1em;
  margin:0.5em 0 0.9em;
  @media #{$medium-up} {
    font-size:2.6em;
  }
  @media #{$large-up}  {
    font-size:4em;
  }
}

%font__size--medium {
  font-family:"OpenSans-Light";
  font-size:1.8em; line-height:1.15em;
  @media #{$medium-up} { font-size:2.6em; line-height:1.25em;}
  @media #{$large-up}  { font-size:2.8em; line-height:1.15em }
}

// Menu
.top-bar {
  .menu-icon {
    * {
      color:$font-color !important;
    }
  }
}


/*------------------------------------*\
    SETTINGS
\*------------------------------------*/
$default-arrow-right: "9_strzalka.png";
$default-arrow-left: "8_strzalka.png";

section.rowWrapper {
  position: relative;
//  min-height:50px;
  .row {
    position: relative;
  }

}


/*------------------------------------*\
    SCHEMATY KOLORYSTYCZNE
\*------------------------------------*/
%row--red {
  background-color:$red-color;
  color:#fff;
}
%row--blue {
  background-color:$blue-color;
  color:#fff;
}
%row--green {
  background-color:$green-color;
  color:#fff;
}
%row--green2 {
  background-color:$green2-color;
  color:#fff;
}
%row--violet {
  background-color:$violet-color;
  color:#fff;
}
%row--footer {
  border-top:6px solid $info-color;
  background-color:$blue3-color;
  color:#fff;
}

%partner--hover {
  @include box-shadow(#000000 0px 0px 25px);

}

.gps_ring {
  border: 3px solid #999;
  -webkit-border-radius: 30px;
  height: 18px;
  width: 18px;
  position: absolute;
  left:20px;
  top:214px;
  -webkit-animation: pulsate 1s ease-out;
  -webkit-animation-iteration-count: infinite;
  opacity: 0.0
}

%btn__arrow--down {
  display:inline-block;
  background: transparent url("#{$dir_GFX}1_strzalkaD.png") center center no-repeat;
  background-size: 50%;
  -webkit-animation: pulsate 1s ease-out;
  -webkit-animation-iteration-count: infinite;
//  width:103px;
//  height:103px;
}

@-webkit-keyframes pulsate {
  0% {-webkit-transform: scale(0.1, 0.1); opacity: 0.0;}
  50% {opacity: 1.0;}
  100% {-webkit-transform: scale(1.2, 1.2); opacity: 0.0;}
}

/*------------------------------------*\
    TOP BAR
\*------------------------------------*/
#top--nav {
  opacity:0.92;
  .title-area {
    h1 {
      img {
        height:51px;
      }
    }
  }
}

/*========================================================================
  Mixin             :   Slier options
  Version:          :   v1.0
  Updated:          :   03/09/2014

  @position         : Border position (top/bottom/left/right)
  @color            : Color
  @width            : Width (3px, 6em, etc.)
  @style            : Solid, double etc. (!OPTIONAL)

  This mixin put border in the position.

=========================================================================*/
%rsBulletsBottom {
  position: relative;
  padding:1.3em 0 2.4em 0px;


  @media #{$medium-up} {
    padding:2.6em 0 !important;
  }
}

// Position changed in app.js
%rsBulletsTop {
  position: relative !important;
  padding:1em 0 1.3em 0px;
}



/*========================================================================
  Mixin             :   SECTIONS
  Version:          :   v1.0
  Updated:          :   03/09/2014

  @position         : Border position (top/bottom/left/right)
  @color            : Color
  @width            : Width (3px, 6em, etc.)
  @style            : Solid, double etc. (!OPTIONAL)

  This mixin put border in the position.

=========================================================================*/

@mixin setSectionMobile( $padding: 0, $ignore: false){
  @if $allowMarginsMobile == true {
    @if $padding != 0 {
      padding:$padding;
    }
  }
  @else if $ignore == true {
    padding:$padding;
  }
}
@mixin setSectionTablet( $padding: 0, $ignore: false){
  @if $allowMarginsTablet == true {
    @if $padding != 0 {
      @media #{$medium-up} {
        padding:$padding;
      }
    }
  }
  @else if $ignore == true {
    padding:$padding;
  }
}
@mixin setSectionPc( $padding: 0, $ignore: false){
  @if $allowMarginsPc == true {
    @if $padding != 0 {
      @media #{$large-up} { padding:$padding; }
    }
  }
  @else if $ignore == true {
    padding:$padding;
  }
}

/*========================================================================
  Mixin             :   OUTLIER
  Version:          :   v1.0
  Updated:          :   03/09/2014

  @position         : Border position (top/bottom/left/right)
  @color            : Color
  @width            : Width (3px, 6em, etc.)
  @style            : Solid, double etc. (!OPTIONAL)

  This mixin put border in the position.

=========================================================================*/
@mixin putBorder($position, $color, $width, $style: solid) {
  border-#{$position}: $width $style $color;
}

/*========================================================================
Mixin             :   Put Separtor
Version:          :   v1.0
Updated:          :   03/09/2014

@position         : Border position (top/bottom/left/right)
@color            : Color
@width            : Width (3px, 6em, etc.)
@style            : Solid, double etc. (!OPTIONAL)

This mixin put border in the position.

=========================================================================*/
@mixin putSeparator($color, $width) {
  display: block;
  height:1px;
  max-height: 1px;
  width:$width;
  margin:0 auto;
  background:$color;
}


/*========================================================================
  Mixin             :   THROW-UP
  Version:          :   v1.0
  Updated:          :   04/09/2014

  @position         : Insert background image under condition
  @bgColor          : Background color
  @filename         : Background image filename
  @position         : background-position

  This mixin put background image into any container under condition

=========================================================================*/
@mixin putSectionImage($bgColor, $filename, $filename2, $position, $position2){
  @if $graphicMode == true {
    background-color:$bgColor;
    @if $position2 != "" {
      background-image: url("#{$dir_GFX}#{$filename}"), url("#{$dir_GFX}#{$filename2}");
      background-position: $position, $position2;
    }
    @else {
      background-image: url("#{$dir_GFX}#{$filename}");
      background-position: $position;
    }
    background-repeat:no-repeat;
  }
}

/*========================================================================
  Mixin             :   SPACE BETWEEN SECTIONS
  Version:          :   v1.0
  Updated:          :   03/09/2014

  @position         : Border position (top/bottom/left/right)
  @color            : Color
  @width            : Width (3px, 6em, etc.)
  @style            : Solid, double etc. (!OPTIONAL)

  This mixin put border in the position.

=========================================================================*/
@mixin setSpace($padding) {
  @if $allowMargins == true {
    padding:$padding;
  }
}

/*========================================================================
  Mixin             :   CASAI (Cross Ã¤ Section Arrow Intruder)
  Version:          :   v1.0
  Updated:          :   02/09/2014

  @height           : Maximum height of an arrow (image)
  @position         : Left / Right

  This mixin take two parameters (height of an image, and position) to
  compile style which gives arrows following behaviour:
  - arrows must go through two section
  - it must be mobile optimized (size of an arrow and margines)
  - if wrapper has some padding or margins it must be this-shit-proof
  - arrows must be always on top of layers (unless you know what you're doing).

=========================================================================*/
@mixin crossSectionArrow($height, $position) {

  $margin: 5%;
  $margin-medium: 1.5rem;
  $margin-large: 0.5rem;

  position: absolute;
  bottom:-2rem;
  height:5.3em;
  @if $position == "right" { right:$margin; }
  @else if $position == "left"{ left:$margin; }
  margin:0px;
  padding:0px;
  z-index:9;

  img {
    display: block;
    height:100%;
  }

  @media #{$medium-only} {
    height:6em;
    bottom:-3rem;

    @if $position == "right" { right:$margin-medium; }
    @else if $position == "left"{ left:$margin-medium; }
  }
  @media #{$large-only} {
    height:7em;
    bottom:-4rem;

    @if $position == "right" { right:$margin-large; }
    @else if $position == "left"{ left:$margin-large; }
  }

}

// Create class objects
.crossSectionArrow--right {
  @include crossSectionArrow("100px", right);
}

.crossSectionArrow--left {
  @include crossSectionArrow("100px", left);
}


/*========================================================================
  Mixin robinHoodArrow includes image using background-image property.

  author: Wojciech MikoÅajewski <wojciechmikolajewski@gmail.com>
=========================================================================*/
@mixin robinHoodArrow($file, $position) {

  @if $position == "right" {
    background-image:url("../../gfx/#{$file}");
    background-position: top right;
  }
  @else if $position == "left" {
    background-image:url("../../gfx/#{$file}");
    background-position: top left;
  }
  @else {
    // error!
  }
  background-repeat: no-repeat;
  background-size: 25%;

}